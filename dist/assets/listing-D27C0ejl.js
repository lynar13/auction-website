import{h as i,b as g,c as d,d as l}from"./app-BZQqP1S8.js";async function h(t,o={},r=3e5){const e=`${t}:${JSON.stringify(o)}`,a=Date.now(),n=JSON.parse(localStorage.getItem(e));if(n&&a<n.expiry)return console.log("Returning cached response from localStorage"),n.data;const s=await fetch(t,o);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const c=await s.json();return localStorage.setItem(e,JSON.stringify({data:c,expiry:a+r})),c}async function w(t){const o="https://v2.api.noroff.dev/auction/listings";try{const r=i(!0),e=await fetch(o,{method:"POST",headers:r,body:JSON.stringify(t)});if(!e.ok){const a=await e.json();throw console.error("Error response from server:",a.errors||a.message),new Error(a.errors?.[0]?.message||"Failed to create listing")}return await e.json()}catch(r){throw console.error("Error creating listing:",r.message),r}}async function u(t){if(!t)throw new Error("Invalid listing ID");const o=g(t);try{return await h(o,{method:"GET",headers:i(!0)})}catch(r){throw console.error("Error fetching listing:",r.message),r}}async function p(t,o){try{const r=await fetch(g(t),{method:"PUT",headers:i(!0,!0),body:JSON.stringify(o)});if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to update listing")}return await r.json()}catch(r){throw console.error("Error updating listing:",r.message),new Error("Failed to update listing: "+r.message)}}async function m(t=1,o=12,r="",e=""){const a=new URLSearchParams({_page:t,_limit:o});r&&a.append("q",r),e&&a.append("_sort",e);const n=r?`${d}?${a.toString()}`:`${l}?${a.toString()}`;try{const s=await h(n,{method:"GET",headers:i(!0)});return s.data||s}catch(s){throw console.error("Error fetching listings:",s.message),s}}export{m as a,w as c,u as r,p as u};
